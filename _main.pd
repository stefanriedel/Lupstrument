#N canvas 1280 53 1920 1027 10;
#X obj 487 367 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 572 333 loadbang;
#X msg 520 350 0;
#X obj 123 369 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 52 274 loadbang;
#X msg 158 352 0;
#N canvas 65 89 1215 719 reset_logic 0;
#X obj 445 211 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 219 151 loadbang;
#X msg 348 194 0;
#X obj 445 246 spigot;
#X msg 522 229 0;
#X msg 484 206 1;
#X obj 522 206 del 10;
#X obj 445 179 t b b;
#X obj 445 282 outlet;
#X obj 445 119 inlet;
#X text 503 249 make sure that only when rec button is actually pressed
we send a message to the looper channels;
#X text 325 96 debounced BANG for every new rec button press;
#X text -2 130 pressing any channel button will reset(refresh) the
toggle;
#X text 329 312 record_enable message: sends 1 for rec_start \, 0 for
rec_stop;
#X obj 348 174 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 236 35 r reset_1;
#X obj 316 35 r reset_2;
#X obj 415 35 r reset_3;
#X obj 508 35 r reset_4;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 8 0;
#X connect 4 0 3 1;
#X connect 5 0 3 1;
#X connect 6 0 4 0;
#X connect 7 0 0 0;
#X connect 7 1 5 0;
#X connect 7 1 6 0;
#X connect 9 0 7 0;
#X connect 14 0 2 0;
#X connect 15 0 14 0;
#X connect 16 0 14 0;
#X connect 17 0 14 0;
#X connect 18 0 14 0;
#X restore 1186 939 pd reset_logic;
#X obj 132 -102 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 484 -109 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X text 268 -104 start loop;
#X text 621 -109 end loop;
#X floatatom 129 -78 5 0 0 0 - - -, f 5;
#X floatatom 481 -88 5 0 0 0 - - -, f 5;
#X obj 129 -57 s start_marker;
#X obj 481 -67 s end_marker;
#X obj 123 395 loopclip;
#X obj 131 72 hsl 128 15 0.005 0.995 0 0 empty empty empty -2 -8 0
10 -262144 -1 -1 0 1;
#X floatatom 128 95 5 0 0 0 - - -, f 5;
#X text 265 73 fade in time;
#X obj 481 72 hsl 128 15 0.005 0.995 0 0 empty empty empty -2 -8 0
10 -262144 -1 -1 0 1;
#X text 612 72 fade out time;
#X floatatom 478 97 5 0 0 0 - - -, f 5;
#X obj 830 96 hsl 128 15 0.2 8 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 827 115 5 0 0 0 - - -, f 5;
#X obj 827 137 s speed;
#X obj 128 119 s fade_in_time;
#X obj 478 119 s fade_out_time;
#X obj 52 -119 loadbang;
#X obj 400 -128 loadbang;
#X obj 749 52 loadbang;
#X msg 749 78 1;
#N canvas 65 81 1214 719 rec_button_debouncer 0;
#X obj 138 216 spigot;
#X msg 177 182 0;
#X msg 215 181 1;
#X obj 302 164 loadbang;
#X obj 144 64 inlet;
#X obj 138 259 outlet;
#X obj 144 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 144 132 t b b;
#X text 175 89 convert incoming button messages (1 = pressed \, 0 =
released) into bangs;
#X text 37 39 bouncing button message (1 = pressed \, 0 = released)
;
#X text 46 288 debounced BANG for every new button press;
#X text 208 208 takes care of physically "bouncing" button (unwanted
toggling) as well as blocking the button release with the 150 ms delay
;
#X obj 215 133 delay 500;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 12 0;
#X connect 7 0 1 0;
#X connect 7 1 0 0;
#X connect 12 0 2 0;
#X restore 1186 899 pd rec_button_debouncer;
#X obj 1186 983 s record_enable_msg;
#X obj 402 56 loadbang;
#X msg 400 -105 1;
#X msg 52 -95 0;
#X obj 829 -111 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 826 -87 5 0 0 0 - - -, f 5;
#X obj 749 -128 loadbang;
#X msg 749 -104 0.5;
#X text 966 -111 clip volume;
#X obj 826 -66 s clip_volume;
#X obj 1189 -110 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 1186 -86 5 0 0 0 - - -, f 5;
#X obj 1109 -127 loadbang;
#X msg 1109 -103 0.5;
#X text 1326 -110 master volume;
#X obj 1186 -65 s master_volume;
#X obj 1563 -54 dac~ 1 2;
#N canvas 65 89 1215 719 mastervolume 0;
#X obj 428 274 loadbang;
#X obj 518 354 line~;
#X obj 518 329 pack 0 5;
#X msg 428 312 0.5;
#X obj 423 399 *~;
#X obj 424 431 outlet~;
#X text 500 207 global clip volume;
#X text 369 455 volume controlled signal;
#X obj 518 228 r master_volume;
#X text 40 130 clip audio signals;
#X obj 192 132 r~ clip1;
#X obj 193 152 r~ clip2;
#X obj 202 296 r~ audio_in;
#X obj 193 172 r~ clip3;
#X obj 194 193 r~ clip4;
#X obj 265 133 r~ clip5;
#X obj 266 153 r~ clip6;
#X obj 266 172 r~ clip7;
#X obj 266 193 r~ clip8;
#X text 54 295 audio in signal;
#X connect 0 0 3 0;
#X connect 1 0 4 1;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 8 0 2 0;
#X connect 10 0 4 0;
#X connect 11 0 4 0;
#X connect 12 0 4 0;
#X connect 13 0 4 0;
#X connect 14 0 4 0;
#X connect 15 0 4 0;
#X connect 16 0 4 0;
#X connect 17 0 4 0;
#X connect 18 0 4 0;
#X restore 1562 -90 pd mastervolume;
#X obj 486 447 s~ clip2;
#X obj 122 444 s~ clip1;
#X obj 1561 -128 s~ audio_in;
#X obj 1561 -209 adc~ 1 2;
#X obj 198 -203 loadbang;
#X obj 898 -28 loadbang;
#X obj 129 -2 adc~ 3;
#X obj 200 -11 loadbang;
#X obj 550 -212 loadbang;
#X obj 547 -15 loadbang;
#X obj 897 -210 loadbang;
#X obj 128 -196 adc~ 7;
#X obj 482 -202 adc~ 8;
#X obj 827 -212 adc~ 9;
#X obj 1257 -213 loadbang;
#X obj 1187 -206 adc~ 10;
#X obj 479 -3 adc~ 4;
#X obj 828 -21 adc~ 5;
#X obj 1505 52 s bela_setDigital;
#X obj 1505 -19 loadbang;
#X msg 1505 14 in 11 \, in 12 \, in 13 \, in 14 \, in 15 \, in 16 \,
in 17 \, in 18 \, in 19 \, in 20 \, in 21 \, in 22 \, in 23 \, in 24
\, in 25 \, in 26;
#X obj 584 -77 print;
#X obj 243 -67 print;
#N canvas 65 85 450 300 calibrate 0;
#X obj 156 89 inlet;
#X obj 156 198 outlet;
#X obj 156 137 * 1.207;
#X text 18 48 adjust range of analog read: reading only from 0 to 3.3
V (not up to the 5 V which equals value 1);
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 129 -131 pd calibrate;
#N canvas 65 81 450 300 calibrate 0;
#X obj 156 89 inlet;
#X obj 156 198 outlet;
#X obj 156 137 * 1.207;
#X text 18 48 adjust range of analog read: reading only from 0 to 3.3
V (not up to the 5 V which equals value 1);
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 481 -139 pd calibrate;
#N canvas 65 89 1215 719 speed_calibrate 0;
#X obj 156 89 inlet;
#X obj 207 423 outlet;
#X obj 156 137 * 1.207;
#X text 18 48 adjust range of analog read: reading only from 0 to 3.3
V (not up to the 5 V which equals value 1);
#X obj 76 288 spigot;
#X obj 76 230 t f f;
#X obj 309 228 t f f;
#X obj 309 287 spigot;
#X msg 207 339 0.5;
#X obj 207 260 &;
#X obj 216 227 t b f;
#X obj 115 259 < 0.48;
#X obj 164 204 > 0.48;
#X obj 216 204 < 0.52;
#X obj 348 255 > 0.52;
#X text 317 327 logic that makes sure the poti mid position snap-in
gets translated into a definite value;
#X obj 207 315 spigot;
#X obj 207 287 t b f;
#X connect 0 0 2 0;
#X connect 2 0 5 0;
#X connect 2 0 6 0;
#X connect 2 0 12 0;
#X connect 2 0 13 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 5 1 11 0;
#X connect 6 0 7 0;
#X connect 6 1 14 0;
#X connect 7 0 1 0;
#X connect 8 0 1 0;
#X connect 9 0 17 0;
#X connect 10 0 9 0;
#X connect 10 1 9 1;
#X connect 11 0 4 1;
#X connect 12 0 9 0;
#X connect 13 0 10 0;
#X connect 14 0 7 1;
#X connect 16 0 8 0;
#X connect 17 0 16 0;
#X connect 17 1 16 1;
#X restore 827 38 pd speed_calibrate;
#X obj 827 66 * 2;
#X msg 898 -4 1;
#X msg 550 -188 1;
#X msg 198 -179 1;
#X obj 43 49 loadbang;
#N canvas 65 81 450 300 calibrate 0;
#X obj 156 89 inlet;
#X obj 156 198 outlet;
#X obj 156 137 * 1.207;
#X text 18 48 adjust range of analog read: reading only from 0 to 3.3
V (not up to the 5 V which equals value 1);
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 128 52 pd calibrate;
#N canvas 65 85 450 300 calibrate 0;
#X obj 156 89 inlet;
#X obj 156 198 outlet;
#X obj 156 137 * 1.207;
#X text 18 48 adjust range of analog read: reading only from 0 to 3.3
V (not up to the 5 V which equals value 1);
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 478 51 pd calibrate;
#N canvas 65 89 450 300 calibrate 0;
#X obj 156 89 inlet;
#X obj 156 198 outlet;
#X obj 156 137 * 1.207;
#X text 18 48 adjust range of analog read: reading only from 0 to 3.3
V (not up to the 5 V which equals value 1);
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 826 -144 pd calibrate;
#N canvas 65 81 450 300 calibrate 0;
#X obj 156 89 inlet;
#X obj 156 198 outlet;
#X obj 156 137 * 1.207;
#X text 18 48 adjust range of analog read: reading only from 0 to 3.3
V (not up to the 5 V which equals value 1);
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 1186 -143 pd calibrate;
#X msg 200 11 1;
#X msg 547 8 1;
#X msg 1257 -189 1;
#X msg 897 -188 1;
#X obj 826 -165 unsigdelta;
#X obj 1186 -163 unsigdelta;
#X obj 129 -155 unsigdelta;
#X obj 481 -163 unsigdelta;
#X obj 128 32 unsigdelta;
#X obj 478 29 unsigdelta;
#X obj 827 17 unsigdelta;
#X obj 123 219 r bela_digitalIn23;
#X obj 487 217 r bela_digitalIn24;
#X obj 140 928 s reset_rec;
#X obj 118 858 r bela_digitalIn11;
#X obj 507 928 s reset_rec;
#N canvas 65 89 1215 719 start_button_debouncer 0;
#X obj 138 216 spigot;
#X msg 177 182 0;
#X msg 215 181 1;
#X obj 302 164 loadbang;
#X obj 144 64 inlet;
#X obj 138 259 outlet;
#X obj 215 133 delay 150;
#X obj 144 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 144 132 t b b;
#X text 175 89 convert incoming button messages (1 = pressed \, 0 =
released) into bangs;
#X text 37 39 bouncing button message (1 = pressed \, 0 = released)
;
#X text 46 288 debounced BANG for every new button press;
#X text 208 208 takes care of physically "bouncing" button (unwanted
toggling) as well as blocking the button release with the 150 ms delay
;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 7 0;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 8 1 0 0;
#X restore 118 886 pd start_button_debouncer;
#N canvas 65 97 1215 719 stop_button_debouncer 0;
#X obj 138 216 spigot;
#X msg 177 182 0;
#X msg 215 181 1;
#X obj 302 164 loadbang;
#X obj 144 64 inlet;
#X obj 138 259 outlet;
#X obj 215 133 delay 150;
#X obj 144 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 144 132 t b b;
#X text 175 89 convert incoming button messages (1 = pressed \, 0 =
released) into bangs;
#X text 37 39 bouncing button message (1 = pressed \, 0 = released)
;
#X text 46 288 debounced BANG for every new button press;
#X text 208 208 takes care of physically "bouncing" button (unwanted
toggling) as well as blocking the button release with the 150 ms delay
;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 7 0;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 8 1 0 0;
#X restore 485 890 pd stop_button_debouncer;
#X obj 118 978 s start_bng;
#X obj 485 978 s stop_bng;
#X obj 485 858 r bela_digitalIn12;
#X obj 1186 861 r bela_digitalIn14;
#X obj 1561 -169 +~;
#X obj 1188 367 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 1273 333 loadbang;
#X msg 1221 350 0;
#X obj 845 371 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 927 337 loadbang;
#X msg 880 354 0;
#X obj 845 222 r bela_digitalIn25;
#X obj 1188 219 r bela_digitalIn26;
#X obj 844 446 s~ clip3;
#X obj 1187 447 s~ clip4;
#X obj 487 392 loopclip;
#X obj 845 397 loopclip;
#X obj 1188 392 loopclip;
#N canvas 65 105 1215 719 button_debouncer 0;
#X obj 138 216 spigot;
#X msg 177 182 0;
#X msg 215 181 1;
#X obj 302 164 loadbang;
#X obj 144 64 inlet;
#X obj 138 259 outlet;
#X obj 215 133 delay 150;
#X obj 144 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 144 132 t b b;
#X text 175 89 convert incoming button messages (1 = pressed \, 0 =
released) into bangs;
#X text 37 39 bouncing button message (1 = pressed \, 0 = released)
;
#X text 46 288 debounced BANG for every new button press;
#X text 208 208 takes care of physically "bouncing" button (unwanted
toggling) as well as blocking the button release with the 150 ms delay
;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 7 0;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 8 1 0 0;
#X restore 123 249 pd button_debouncer;
#N canvas 65 105 1215 719 button_debouncer 0;
#X obj 138 216 spigot;
#X msg 177 182 0;
#X msg 215 181 1;
#X obj 302 164 loadbang;
#X obj 144 64 inlet;
#X obj 138 259 outlet;
#X obj 215 133 delay 150;
#X obj 144 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 144 132 t b b;
#X text 175 89 convert incoming button messages (1 = pressed \, 0 =
released) into bangs;
#X text 37 39 bouncing button message (1 = pressed \, 0 = released)
;
#X text 46 288 debounced BANG for every new button press;
#X text 208 208 takes care of physically "bouncing" button (unwanted
toggling) as well as blocking the button release with the 150 ms delay
;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 7 0;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 8 1 0 0;
#X restore 845 255 pd button_debouncer;
#N canvas 65 101 1215 719 button_debouncer 0;
#X obj 138 216 spigot;
#X msg 177 182 0;
#X msg 215 181 1;
#X obj 302 164 loadbang;
#X obj 144 64 inlet;
#X obj 138 259 outlet;
#X obj 215 133 delay 150;
#X obj 144 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 144 132 t b b;
#X text 175 89 convert incoming button messages (1 = pressed \, 0 =
released) into bangs;
#X text 37 39 bouncing button message (1 = pressed \, 0 = released)
;
#X text 46 288 debounced BANG for every new button press;
#X text 208 208 takes care of physically "bouncing" button (unwanted
toggling) as well as blocking the button release with the 150 ms delay
;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 7 0;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 8 1 0 0;
#X restore 1188 252 pd button_debouncer;
#N canvas 65 105 1215 719 button_debouncer 0;
#X obj 138 216 spigot;
#X msg 177 182 0;
#X msg 215 181 1;
#X obj 302 164 loadbang;
#X obj 144 64 inlet;
#X obj 138 259 outlet;
#X obj 215 133 delay 150;
#X obj 144 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 144 132 t b b;
#X text 175 89 convert incoming button messages (1 = pressed \, 0 =
released) into bangs;
#X text 37 39 bouncing button message (1 = pressed \, 0 = released)
;
#X text 46 288 debounced BANG for every new button press;
#X text 208 208 takes care of physically "bouncing" button (unwanted
toggling) as well as blocking the button release with the 150 ms delay
;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 7 0;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 8 1 0 0;
#X restore 487 246 pd button_debouncer;
#X msg 123 291 1;
#X obj 162 280 s reset_1;
#X obj 532 277 s reset_2;
#X msg 487 289 1;
#X msg 845 294 1;
#X obj 885 282 s reset_3;
#X obj 1247 277 s reset_4;
#X msg 1188 291 1;
#N canvas 65 53 1215 747 reset_logic_1 0;
#X obj 74 43 r reset_2;
#X obj 145 44 r reset_3;
#X obj 215 44 r reset_4;
#X obj 163 252 outlet;
#X obj 288 44 r reset_5;
#X obj 358 45 r reset_6;
#X obj 428 45 r reset_7;
#X obj 499 45 r reset_8;
#X connect 0 0 3 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 3 0;
#X restore 158 317 pd reset_logic_1;
#N canvas 65 53 1215 747 reset_logic_2 0;
#X obj 228 46 r reset_3;
#X obj 302 46 r reset_4;
#X obj 154 189 outlet;
#X obj 154 46 r reset_1;
#X obj 374 46 r reset_5;
#X obj 448 46 r reset_6;
#X obj 522 46 r reset_7;
#X obj 594 46 r reset_8;
#X connect 0 0 2 0;
#X connect 1 0 2 0;
#X connect 3 0 2 0;
#X restore 520 313 pd reset_logic_2;
#N canvas 65 53 1215 747 reset_logic_3 0;
#X obj 299 48 r reset_4;
#X obj 155 116 outlet;
#X obj 155 48 r reset_1;
#X obj 227 48 r reset_2;
#X obj 370 49 r reset_5;
#X obj 442 49 r reset_6;
#X obj 514 49 r reset_7;
#X obj 586 49 r reset_8;
#X connect 0 0 1 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 1 0;
#X restore 880 317 pd reset_logic_3;
#N canvas 65 53 1215 747 reset_logic_4 0;
#X obj 155 116 outlet;
#X obj 62 24 r reset_1;
#X obj 134 24 r reset_2;
#X obj 277 25 r reset_5;
#X obj 349 25 r reset_6;
#X obj 421 25 r reset_7;
#X obj 493 25 r reset_8;
#X obj 206 24 r reset_3;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X restore 1221 312 pd reset_logic_4;
#X msg 402 80 0.01;
#X msg 43 78 0.01;
#X obj 485 656 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 570 622 loadbang;
#X msg 518 639 0;
#X obj 121 658 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 156 641 0;
#X obj 121 684 loopclip;
#X obj 1186 656 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1
0 1;
#X obj 1271 622 loadbang;
#X msg 1219 639 0;
#X obj 843 660 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 925 626 loadbang;
#X msg 878 643 0;
#X obj 485 681 loopclip;
#X obj 843 686 loopclip;
#X obj 1186 681 loopclip;
#N canvas 65 105 1215 719 button_debouncer 0;
#X obj 138 216 spigot;
#X msg 177 182 0;
#X msg 215 181 1;
#X obj 302 164 loadbang;
#X obj 144 64 inlet;
#X obj 138 259 outlet;
#X obj 215 133 delay 150;
#X obj 144 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 144 132 t b b;
#X text 175 89 convert incoming button messages (1 = pressed \, 0 =
released) into bangs;
#X text 37 39 bouncing button message (1 = pressed \, 0 = released)
;
#X text 46 288 debounced BANG for every new button press;
#X text 208 208 takes care of physically "bouncing" button (unwanted
toggling) as well as blocking the button release with the 150 ms delay
;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 7 0;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 8 1 0 0;
#X restore 121 538 pd button_debouncer;
#N canvas 65 105 1215 719 button_debouncer 0;
#X obj 138 216 spigot;
#X msg 177 182 0;
#X msg 215 181 1;
#X obj 302 164 loadbang;
#X obj 144 64 inlet;
#X obj 138 259 outlet;
#X obj 215 133 delay 150;
#X obj 144 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 144 132 t b b;
#X text 175 89 convert incoming button messages (1 = pressed \, 0 =
released) into bangs;
#X text 37 39 bouncing button message (1 = pressed \, 0 = released)
;
#X text 46 288 debounced BANG for every new button press;
#X text 208 208 takes care of physically "bouncing" button (unwanted
toggling) as well as blocking the button release with the 150 ms delay
;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 7 0;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 8 1 0 0;
#X restore 843 544 pd button_debouncer;
#N canvas 65 101 1215 719 button_debouncer 0;
#X obj 138 216 spigot;
#X msg 177 182 0;
#X msg 215 181 1;
#X obj 302 164 loadbang;
#X obj 144 64 inlet;
#X obj 138 259 outlet;
#X obj 215 133 delay 150;
#X obj 144 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 144 132 t b b;
#X text 175 89 convert incoming button messages (1 = pressed \, 0 =
released) into bangs;
#X text 37 39 bouncing button message (1 = pressed \, 0 = released)
;
#X text 46 288 debounced BANG for every new button press;
#X text 208 208 takes care of physically "bouncing" button (unwanted
toggling) as well as blocking the button release with the 150 ms delay
;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 7 0;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 8 1 0 0;
#X restore 1186 541 pd button_debouncer;
#N canvas 65 105 1215 719 button_debouncer 0;
#X obj 138 216 spigot;
#X msg 177 182 0;
#X msg 215 181 1;
#X obj 302 164 loadbang;
#X obj 144 64 inlet;
#X obj 138 259 outlet;
#X obj 215 133 delay 150;
#X obj 144 98 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 144 132 t b b;
#X text 175 89 convert incoming button messages (1 = pressed \, 0 =
released) into bangs;
#X text 37 39 bouncing button message (1 = pressed \, 0 = released)
;
#X text 46 288 debounced BANG for every new button press;
#X text 208 208 takes care of physically "bouncing" button (unwanted
toggling) as well as blocking the button release with the 150 ms delay
;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 7 0;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 1 0;
#X connect 8 1 0 0;
#X restore 485 535 pd button_debouncer;
#X msg 121 580 1;
#X msg 485 578 1;
#X msg 843 583 1;
#X msg 1186 580 1;
#N canvas 65 53 1215 747 reset_logic_5 0;
#X obj 155 116 outlet;
#X obj 75 35 r reset_1;
#X obj 147 35 r reset_2;
#X obj 362 36 r reset_6;
#X obj 434 36 r reset_7;
#X obj 506 36 r reset_8;
#X obj 219 35 r reset_3;
#X obj 290 36 r reset_4;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X restore 156 607 pd reset_logic_5;
#N canvas 65 53 1215 747 reset_logic_6 0;
#X obj 155 116 outlet;
#X obj 75 33 r reset_1;
#X obj 147 33 r reset_2;
#X obj 434 34 r reset_7;
#X obj 506 34 r reset_8;
#X obj 219 33 r reset_3;
#X obj 290 34 r reset_4;
#X obj 362 34 r reset_5;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X restore 518 602 pd reset_logic_6;
#N canvas 65 53 1215 747 reset_logic_7 0;
#X obj 155 116 outlet;
#X obj 75 33 r reset_1;
#X obj 147 33 r reset_2;
#X obj 506 34 r reset_8;
#X obj 219 33 r reset_3;
#X obj 290 34 r reset_4;
#X obj 362 34 r reset_5;
#X obj 434 34 r reset_6;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X restore 878 606 pd reset_logic_7;
#N canvas 65 53 1215 747 reset_logic_8 0;
#X obj 155 116 outlet;
#X obj 67 28 r reset_1;
#X obj 139 28 r reset_2;
#X obj 211 28 r reset_3;
#X obj 282 29 r reset_4;
#X obj 354 29 r reset_5;
#X obj 426 29 r reset_6;
#X obj 499 29 r reset_7;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X restore 1219 601 pd reset_logic_8;
#X obj 121 508 r bela_digitalIn19;
#X obj 485 506 r bela_digitalIn20;
#X obj 843 511 r bela_digitalIn21;
#X obj 1186 508 r bela_digitalIn22;
#X obj 160 569 s reset_5;
#X obj 530 566 s reset_6;
#X obj 883 571 s reset_7;
#X obj 1246 566 s reset_8;
#X obj 120 733 s~ clip5;
#X obj 484 736 s~ clip6;
#X obj 842 735 s~ clip7;
#X obj 1185 736 s~ clip8;
#X text 1503 81 Initialise all digital inputs of Bela;
#X text 1643 -210 audio input;
#X text 582 -287 Stefan Riedel \, 2018;
#X text 121 -231 8 analog inputs reading potentiometers:;
#X text 118 191 8 loop channels \, selected via digital inputs:;
#X text 120 -311 LUPSTRUMENT: MULTI-CHANNEL LOOPER INSTRUMENT FOR BELA
PLATFORM \, ALLOWS MUSIC CONCRETE STYLE MODIFICATIONS OF LOOPS (time
selection \, play reverse \, change playback speed);
#X text 117 809 Start \, stop and record commands. All control the
currently selected channel.;
#X text 174 396 channel selection \, inside patch with looper core
;
#X text 903 119 playback speed \, slow to double;
#X obj 1173 103 hsl 128 15 0.2 8 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 1170 122 5 0 0 0 - - -, f 5;
#X obj 1170 144 s speed;
#X obj 1092 59 loadbang;
#X msg 1092 85 1;
#X obj 1241 -21 loadbang;
#N canvas 65 89 1215 719 speed_calibrate 0;
#X obj 156 89 inlet;
#X obj 207 423 outlet;
#X obj 156 137 * 1.207;
#X text 18 48 adjust range of analog read: reading only from 0 to 3.3
V (not up to the 5 V which equals value 1);
#X obj 76 288 spigot;
#X obj 76 230 t f f;
#X obj 309 228 t f f;
#X obj 309 287 spigot;
#X msg 207 339 0.5;
#X obj 207 260 &;
#X obj 216 227 t b f;
#X obj 115 259 < 0.48;
#X obj 164 204 > 0.48;
#X obj 216 204 < 0.52;
#X obj 348 255 > 0.52;
#X text 317 327 logic that makes sure the poti mid position snap-in
gets translated into a definite value;
#X obj 207 315 spigot;
#X obj 207 287 t b f;
#X connect 0 0 2 0;
#X connect 2 0 5 0;
#X connect 2 0 6 0;
#X connect 2 0 12 0;
#X connect 2 0 13 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 5 1 11 0;
#X connect 6 0 7 0;
#X connect 6 1 14 0;
#X connect 7 0 1 0;
#X connect 8 0 1 0;
#X connect 9 0 17 0;
#X connect 10 0 9 0;
#X connect 10 1 9 1;
#X connect 11 0 4 1;
#X connect 12 0 9 0;
#X connect 13 0 10 0;
#X connect 14 0 7 1;
#X connect 16 0 8 0;
#X connect 17 0 16 0;
#X connect 17 1 16 1;
#X restore 1170 45 pd speed_calibrate;
#X msg 1241 3 1;
#X obj 1170 24 unsigdelta;
#X obj 1171 -14 adc~ 6;
#X obj 1170 73 * 16;
#X text 1246 126 playback speed \, slow to 16 times;
#X connect 0 0 118 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 15 0;
#X connect 4 0 125 0;
#X connect 5 0 3 0;
#X connect 6 0 32 0;
#X connect 7 0 11 0;
#X connect 8 0 12 0;
#X connect 11 0 13 0;
#X connect 12 0 14 0;
#X connect 15 0 51 0;
#X connect 16 0 17 0;
#X connect 17 0 25 0;
#X connect 19 0 21 0;
#X connect 21 0 26 0;
#X connect 22 0 23 0;
#X connect 23 0 24 0;
#X connect 27 0 35 0;
#X connect 28 0 34 0;
#X connect 29 0 30 0;
#X connect 30 0 23 0;
#X connect 31 0 6 0;
#X connect 33 0 137 0;
#X connect 34 0 12 0;
#X connect 35 0 11 0;
#X connect 36 0 37 0;
#X connect 37 0 41 0;
#X connect 38 0 39 0;
#X connect 39 0 37 0;
#X connect 42 0 43 0;
#X connect 43 0 47 0;
#X connect 44 0 45 0;
#X connect 45 0 43 0;
#X connect 49 0 48 0;
#X connect 49 0 48 1;
#X connect 53 0 107 0;
#X connect 53 1 107 1;
#X connect 54 0 79 0;
#X connect 55 0 77 0;
#X connect 56 0 93 0;
#X connect 57 0 85 0;
#X connect 58 0 78 0;
#X connect 59 0 86 0;
#X connect 60 0 88 0;
#X connect 61 0 91 0;
#X connect 62 0 92 0;
#X connect 63 0 89 0;
#X connect 64 0 87 0;
#X connect 65 0 90 0;
#X connect 66 0 94 0;
#X connect 67 0 95 0;
#X connect 69 0 70 0;
#X connect 70 0 68 0;
#X connect 73 0 7 0;
#X connect 74 0 8 0;
#X connect 75 0 76 0;
#X connect 76 0 22 0;
#X connect 77 0 95 1;
#X connect 78 0 92 1;
#X connect 79 0 91 1;
#X connect 80 0 138 0;
#X connect 81 0 16 0;
#X connect 82 0 19 0;
#X connect 83 0 36 0;
#X connect 84 0 42 0;
#X connect 85 0 93 1;
#X connect 86 0 94 1;
#X connect 87 0 90 1;
#X connect 88 0 89 1;
#X connect 89 0 83 0;
#X connect 90 0 84 0;
#X connect 91 0 73 0;
#X connect 92 0 74 0;
#X connect 93 0 81 0;
#X connect 94 0 82 0;
#X connect 95 0 75 0;
#X connect 96 0 121 0;
#X connect 97 0 124 0;
#X connect 99 0 101 0;
#X connect 101 0 98 0;
#X connect 101 0 103 0;
#X connect 102 0 100 0;
#X connect 102 0 104 0;
#X connect 105 0 102 0;
#X connect 106 0 31 0;
#X connect 107 0 52 0;
#X connect 108 0 120 0;
#X connect 109 0 110 0;
#X connect 110 0 108 0;
#X connect 111 0 119 0;
#X connect 112 0 113 0;
#X connect 113 0 111 0;
#X connect 114 0 122 0;
#X connect 115 0 123 0;
#X connect 118 0 50 0;
#X connect 119 0 116 0;
#X connect 120 0 117 0;
#X connect 121 0 125 0;
#X connect 121 0 126 0;
#X connect 122 0 129 0;
#X connect 122 0 130 0;
#X connect 123 0 131 0;
#X connect 123 0 132 0;
#X connect 124 0 128 0;
#X connect 124 0 127 0;
#X connect 125 0 3 0;
#X connect 128 0 0 0;
#X connect 129 0 111 0;
#X connect 132 0 108 0;
#X connect 133 0 5 0;
#X connect 134 0 2 0;
#X connect 135 0 113 0;
#X connect 136 0 110 0;
#X connect 137 0 21 0;
#X connect 138 0 17 0;
#X connect 139 0 151 0;
#X connect 140 0 141 0;
#X connect 141 0 139 0;
#X connect 142 0 144 0;
#X connect 143 0 142 0;
#X connect 144 0 174 0;
#X connect 145 0 153 0;
#X connect 146 0 147 0;
#X connect 147 0 145 0;
#X connect 148 0 152 0;
#X connect 149 0 150 0;
#X connect 150 0 148 0;
#X connect 151 0 175 0;
#X connect 152 0 176 0;
#X connect 153 0 177 0;
#X connect 154 0 158 0;
#X connect 154 0 170 0;
#X connect 155 0 160 0;
#X connect 155 0 172 0;
#X connect 156 0 161 0;
#X connect 156 0 173 0;
#X connect 157 0 159 0;
#X connect 157 0 171 0;
#X connect 158 0 142 0;
#X connect 159 0 139 0;
#X connect 160 0 148 0;
#X connect 161 0 145 0;
#X connect 162 0 143 0;
#X connect 163 0 141 0;
#X connect 164 0 150 0;
#X connect 165 0 147 0;
#X connect 166 0 154 0;
#X connect 167 0 157 0;
#X connect 168 0 155 0;
#X connect 169 0 156 0;
#X connect 187 0 188 0;
#X connect 188 0 189 0;
#X connect 190 0 191 0;
#X connect 191 0 188 0;
#X connect 192 0 194 0;
#X connect 193 0 197 0;
#X connect 194 0 195 1;
#X connect 195 0 193 0;
#X connect 196 0 195 0;
#X connect 197 0 187 0;
